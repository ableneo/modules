(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{"./README.md":function(e,t,a){"use strict";a.r(t),a.d(t,"default",function(){return s});var n=a("./node_modules/docz-core/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),b=(a("./node_modules/react/index.js"),a("./node_modules/@mdx-js/react/dist/index.es.js")),o={},i="wrapper";function s(e){var t=e.components,a=Object(n.a)(e,["components"]);return Object(b.b)(i,Object.assign({},o,a,{components:t,mdxType:"MDXLayout"}),Object(b.b)("p",null,Object(b.b)("a",Object.assign({parentName:"p"},{href:"https://lernajs.io/"}),Object(b.b)("img",{alt:"lerna",src:"https://img.shields.io/badge/maintained%20with-lerna-cc00ff.svg"})),"\n",Object(b.b)("a",Object.assign({parentName:"p"},{href:"https://travis-ci.org/ableneo/modules"}),Object(b.b)("img",{alt:"Build Status",src:"https://travis-ci.org/ableneo/modules.svg?branch=master"})),"\n",Object(b.b)("a",Object.assign({parentName:"p"},{href:"https://github.com/prettier/prettier"}),Object(b.b)("img",{alt:"styled with prettier",src:"https://img.shields.io/badge/styled_with-prettier-ff69b4.svg"})),"\n",Object(b.b)("a",Object.assign({parentName:"p"},{href:"https://david-dm.org/ableneo/modules"}),Object(b.b)("img",{alt:"dependency",src:"https://david-dm.org/ableneo/modules/status.svg"})),"\n",Object(b.b)("a",Object.assign({parentName:"p"},{href:"https://david-dm.org/ableneo/modules?type=dev"}),Object(b.b)("img",{alt:"devDep",src:"https://david-dm.org/ableneo/modules/dev-status.svg"})),"\n",Object(b.b)("a",Object.assign({parentName:"p"},{href:"https://snyk.io/test/github/ableneo/modules"}),Object(b.b)("img",{alt:"Known Vulnerabilities",src:"https://snyk.io/test/github/ableneo/modules/badge.svg"})),"\n",Object(b.b)("a",Object.assign({parentName:"p"},{href:"https://github.com/facebook/jest"}),Object(b.b)("img",{alt:"tested with jest",src:"https://img.shields.io/badge/tested_with-jest-99424f.svg"})),"\n",Object(b.b)("a",Object.assign({parentName:"p"},{href:"https://www.typescriptlang.org/"}),Object(b.b)("img",{alt:"use typescript",src:"https://img.shields.io/badge/use-typescript-blue.svg"}))),Object(b.b)("h1",{id:"ableneomodules"},"@ableneo/modules"),Object(b.b)("p",null,"Javascript Modules monorepo with publishing to ",Object(b.b)("a",Object.assign({parentName:"p"},{href:"https://www.npmjs.com/~ableneo"}),"https://www.npmjs.com/~ableneo")),Object(b.b)("p",null,"This repo contains packages used at @ableneo with shared configuration for JavaScript/TypeScript tooling."),Object(b.b)("h3",{id:"--eslint-config-ableneo---eslint-configuration-with-support-for-typescript-flow-and-prettier-integration"},"- ",Object(b.b)("a",Object.assign({parentName:"h3"},{href:"./packages/eslint-config-ableneo/"}),Object(b.b)("inlineCode",{parentName:"a"},"eslint-config-ableneo"))," - ESLint configuration with support for TypeScript, Flow and Prettier integration."),Object(b.b)("h3",{id:"--ableneoprettier-config---prettier-configuration-file"},"- ",Object(b.b)("a",Object.assign({parentName:"h3"},{href:"./packages/prettier-config/"}),Object(b.b)("inlineCode",{parentName:"a"},"@ableneo/prettier-config"))," - Prettier configuration file."),Object(b.b)("h2",{id:"how-to-develop"},"How to develop"),Object(b.b)("p",null,"Open terminal in root of the project and run following command that will start styleguide server ",Object(b.b)("inlineCode",{parentName:"p"},"docz")," and run watch builds and tests."),Object(b.b)("pre",null,Object(b.b)("code",Object.assign({parentName:"pre"},{className:"language-bash"}),"yarn run dev\n")),Object(b.b)("p",null,"If you just want ",Object(b.b)("inlineCode",{parentName:"p"},"docz")," styleguide then run just"),Object(b.b)("pre",null,Object(b.b)("code",Object.assign({parentName:"pre"},{className:"language-bash"}),"yarn run docz:dev\n")),Object(b.b)("h2",{id:"generating-new-packages"},"Generating new packages"),Object(b.b)("p",null,"Npm script will prompt name of the package and generate boilerplate."),Object(b.b)("pre",null,Object(b.b)("code",Object.assign({parentName:"pre"},{className:"language-bash"}),"yarn generate:package\n")),Object(b.b)("h2",{id:"use-conventional-commits"},"Use Conventional Commits"),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",Object.assign({parentName:"li"},{href:"https://www.conventionalcommits.org"}),"https://www.conventionalcommits.org"))),Object(b.b)("p",null,"The commit message should be structured as follows:"),Object(b.b)("pre",null,Object(b.b)("code",Object.assign({parentName:"pre"},{}),"<type>[optional scope]: <description>\n\n[optional body]\n\n[optional footer]\n")),Object(b.b)("p",null,"The commit contains the following structural elements, to communicate intent to the consumers of your library:"),Object(b.b)("p",null,"1.",Object(b.b)("em",{parentName:"p"},"fix"),": a commit of the type fix patches a bug in your codebase (this correlates with PATCH in semantic versioning)."),Object(b.b)("p",null,"2.",Object(b.b)("em",{parentName:"p"},"feat"),": a commit of the type feat introduces a new feature to the codebase (this correlates with MINOR in semantic versioning)."),Object(b.b)("p",null,"3.",Object(b.b)("em",{parentName:"p"},"BREAKING CHANGE"),": a commit that has the text BREAKING CHANGE: at the beginning of its optional body or footer section introduces a breaking API change (correlating with MAJOR in semantic versioning). A BREAKING CHANGE can be part of commits of any type."),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},"Others: commit types other than fix: and feat: are allowed, for example @commitlint/config-conventional (based on the the Angular convention) recommends ",Object(b.b)("em",{parentName:"li"},"chore:, docs:, style:, refactor:, perf:, test:"),", and others.")),Object(b.b)("h2",{id:"releasing-new-version"},"Releasing new version"),Object(b.b)("p",null,"Code that is merged to ",Object(b.b)("inlineCode",{parentName:"p"},"master")," will be automatically released by the ",Object(b.b)("inlineCode",{parentName:"p"},"travis-ci")," pipeline. New version will be determined by the commit names."),Object(b.b)("h1",{id:"about-ableneo"},"About Ableneo"),Object(b.b)("p",null,Object(b.b)("img",{alt:"Twitter Follow",src:"https://img.shields.io/twitter/follow/ableneo1.svg?label=Ableneo&style=social"})),Object(b.b)("h5",{id:"read-our-blog"},"Read our blog"),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",Object.assign({parentName:"li"},{href:"https://medium.com/ableneo"}),"https://medium.com/ableneo")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",Object.assign({parentName:"li"},{href:"https://www.ableneo.com/blog"}),"https://www.ableneo.com/blog"))),Object(b.b)("h5",{id:"our-website"},"Our website"),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",Object.assign({parentName:"li"},{href:"https://www.ableneo.com/"}),"https://www.ableneo.com/"))),Object(b.b)("h5",{id:"contact-us"},"Contact us"),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",Object.assign({parentName:"li"},{href:"tel:+421232144791"}),"+421 2 32 144 791")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",Object.assign({parentName:"li"},{href:"mailto:info@ableneo.com?subject=Subject%20%7C%20contact%20from%20github"}),"info@ableneo.com"))),Object(b.b)("h2",{id:"maintainers"},"Maintainers"),Object(b.b)("table",null,Object(b.b)("tbody",null,Object(b.b)("tr",null,Object(b.b)("td",{align:"center"},Object(b.b)("a",{href:"https://github.com/marcelmokos"},Object(b.b)("img",{width:"150",height:"150",src:"https://github.com/marcelmokos.png?v=3&s=150"}),Object(b.b)("br",null),"Marcel Moko\u0161"),Object(b.b)("div",null,Object(b.b)("a",{href:"https://twitter.com/marcelmokos"},Object(b.b)("img",{src:"https://img.shields.io/twitter/follow/marcelmokos.svg?style=social&label=Follow"}))))))),Object(b.b)("h2",{id:"contributors"},"Contributors"),Object(b.b)("table",null,Object(b.b)("tr",null,Object(b.b)("td",{align:"center"},Object(b.b)("a",{href:"https://github.com/marcelmokos"},Object(b.b)("img",{src:"https://avatars2.githubusercontent.com/u/6388074",width:"100px;",alt:"Marcel Mokos"}),Object(b.b)("br",null),Object(b.b)("sub",null,Object(b.b)("b",null,"Marcel Mokos"))),Object(b.b)("br",null),Object(b.b)("a",{href:"https://github.com/ableneo/modules/commits?author=marcelmokos",title:"Code"},"\ud83d\udcbb")," ",Object(b.b)("a",{href:"https://github.com/ableneo/modules/commits?author=marcelmokos",title:"Documentation"},"\ud83d\udcd6")," ",Object(b.b)("a",{href:"https://github.com/ableneo/modules/issues?q=author%3Amarcelmokos",title:"Bug reports"},"\ud83d\udc1b")," ",Object(b.b)("a",{href:"#review-marcelmokos",title:"Reviewed Pull Requests"},"\ud83d\udc40")))))}s&&s===Object(s)&&Object.isExtensible(s)&&Object.defineProperty(s,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"MDXContent",filename:"README.md"}}),s.isMDXComponent=!0}}]);
//# sourceMappingURL=readme.07e482a1e495ff931bae.js.map